!!! 5
%html
	%head
		%title= "Bartek going to München"
		%meta{ :name => "application-name", :content => "Grip" }
		%meta{ :name => "viewport", :content => "width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" }

		%link{ :rel => "stylesheet", :href => "/css/images.css", :media => "only screen and (-webkit-min-device-pixel-ratio:1)" }
		%link{ :rel => "stylesheet", :href => "/css/images-x2.css", :media => "only screen and (-webkit-min-device-pixel-ratio:2)" }

		%link{ :href => "/css/bootstrap.css", :media => "screen", :rel => "stylesheet" }
		%link{ :href => "/css/main.css", :rel => "stylesheet"}
		%link{ :href => "/css/type.css", :rel => "stylesheet"}
		%link{ :href => "/css/slider.css", :rel => "stylesheet"}

		%link{ :href => "/css/nav.css", :rel => "stylesheet"}
		%link{ :href => "/css/font.css", :rel => "stylesheet"}

		%script{ :src => "/js/jquery-1.9.1.min.js", :type => "text/javascript"}
		%script{ :src => "/js/jquery-ui.custom.min.js", :type => "text/javascript"}
		%script{ :src => "/js/modernizr.js", :type => "text/javascript"}
		%script{ :src => "/js/bootstrap.js", :type => "text/javascript"}

		%script{ :src => "/js/munchen.js", :type => "text/javascript"}
		%script{ :src => "/js/jquery.hammer.js", :type => "text/javascript"}


	%body{ "data-spy" => "scroll", "data-target" => "#navbar"}

		#language
			%a{ :href => '?locale=en'}
				eng
			|
			%a{ :href => '?locale=de'}
				de
		#navbar
			%nav.fixed
				%ul.nav
					%li
						%a{ :href => "#chapter1" }
							%div
								%span= t(:'navigation.menu.item1')
					%li
						%a{ :href => "#chapter2" }
							%div
								%span= t(:'navigation.menu.item2')
					%li
						%a{ :href => "#chapter3" }
							%div
								%span= t(:'navigation.menu.item3')
					%li
						%a{ :href => "#chapter4" }
							%div
								%span= t(:'navigation.menu.item4')
					%li
						%a{ :href => "#chapter5" }
							%div
								%span= t(:'navigation.menu.item5')

		%section#chapter1.orange.min-resize
			.container
				.row
					.span12
						.browser-frame
							.top-bar
								.circles
									.circle
									.circle
									.circle
								.address-bar
							.content
								.row-fluid
									.container-fluid
										.span12.pagination-centered
											%h1
												%span.white-on-orange=t(:'chapter1.title')

								.row-fluid
									.container-fluid
										.span6.pagination-centered
											%h2=t(:'chapter1.london.line1') 
											%div
												%img{ :src => '/images/img-london.png'}
											%h2.city=t(:'chapter1.london.city')
											%h2=t(:'chapter1.london.line2')
										.span6.pagination-centered
											%h2=t(:'chapter1.munich.line1')
											%div
												%img{ :src => '/images/img-munchen.png'}
											%h2.city=t(:'chapter1.munich.city')
											%h2=t(:'chapter1.munich.line2')

					

		%section#chapter2.turquoise.resize.position-middle
			.container
				.row
					.span8.offset4.position
						%h1= t(:'chapter2.munich.title')
						%h2= t(:'chapter2.munich.header2')

		%section#chapter3.yellow
			.container
				.row
					.span12
						%h1=t(:'chapter3.mockup.title')
						%h2=t(:'chapter3.mockup.header2')
						%p=t(:'chapter3.mockup.paragraph')
				.row

					.span3
						%h2 Next step design.
						%p Wireframes, from a design perspective, are intentionally plain and nondescript. This allows the designer free reign to dream up the very best look and feel without feeling constrained by the wires’ prescriptions.

					.span9.tap
						%img{ :src => "/images/single-tap.png", :alt => ""}

					#before-after-slider.side-by-side.span9
						#slider.left.animate
							%div.mask
								%img{ :src => "/images/kiscard-wireframe-870.jpg", :alt => "" }
							%span.left-label Wireframe
							%span.right-label Design
						%img.right{ :src => "/images/kiscard-design-870.jpg", :alt => "" }
					:javascript

						var prevent_scroll_drag = true;

						function logEvent(ev) {
							if(!ev.gesture) {
								return;
							}
							var offset = $('#before-after-slider').offset();
							var value = ev.gesture['center'];

							value = value.pageX - offset.left;
							value = value * 100 / $('#before-after-slider > img').width()

							if (value > 100) {
								value = 100
							}
							$('#slider').width("" + value + "%");
						}

						var all_events = ['touch','release','hold','tap','dragstart','drag','dragend','dragleft','dragright','swipe'];

						var hammertime = Hammer($('#before-after-slider'), {
								prevent_default: true,
								no_mouseevents: false,
								prevent_default: true
							}).on(all_events.join(" "), logEvent);

		%section#chapter4.gray
			.container
				.row
					.span12
						%h1 Backend, where the magic begins!
						%h2 The technology is meant to pick up where design leaves off, delivering on the promises made by the wireframes. Often the unsung heroes, our technology and development teams ensure the vision is realized in the digital space. From the start, technology is top-of-mind as our ultimate delivery mechanism.

						Specilize in :
						%ul
							%li
						 Ruby on Rails development

					.span10.offset1							
						.editor
							.top_bar
								subscription.rb
							.content
								.tab
									:erb
										<span class="def"><span>class</span> SubscriptionNotRemovableException < StandardError<br/>
										end</span></br>
										<br/>

										<span class="def"><span>class</span> Subscription < ActiveRecord::Base</span><br/>
										<br/>
									.tab
										:erb
											named_scope <span class="symbol">:active</span>, <span class="symbol">:conditions</span> => [ "(start_date <= current_date) and (end_date >= current_date)" ]<br/>

											belongs_to <span class="symbol">:subscription_type</span><br/>
											belongs_to <span class="symbol">:subscriber</span>, <span class="symbol">:polymorphic</span> => <span class="symbol">true</span><br/>

											has_many <span class="symbol">:transactions</span>, <span class="symbol">:as</span> => <span class="symbol">:transactable</span><br/>

											cattr_reader <span class="symbol">:per_page</span><br/>
											@@per_page = 10<br/>

											restful_common_permission_checks<br/>
											<br/>

											validates_presence_of   <span class="symbol">:start_date</span></br>
											validates_presence_of   <span class="symbol">:end_date</span><br/>
											validates_presence_of   <span class="symbol">:subscription_type_id</span><br/>
											validates_presence_of   <span class="symbol">:subscriber</span><br/>
											validates_numericality_of <span class="symbol">:quantity_purchased</span>, <span class="symbol">:on</span> => <span class="symbol">:save</span>, <span class="symbol">:only_integer</span> => <span class="symbol">true</span>, <span class="symbol">:greater_than</span> => 0<br/>
											validates_numericality_of <span class="symbol">:quantity_purchased</span>, <span class="symbol">:on</span> => <span class="symbol">:create</span>, <span class="symbol">:only_integer</span> => <span class="symbol">true</span>, <span class="symbol">:greater_than</span> => 0<br/>
											validates_numericality_of <span class="symbol">:quantity_purchased</span>, <span class="symbol">:on</span> => <span class="symbol">:update</span>, <span class="symbol">:only_integer</span> => <span class="symbol">true</span>, <span class="symbol">:greater_than</span> => 0<br/>
											<br/>

											attr_reader <span class="symbol">:activation_errors</span><br/>

											attr_accessible <span class="symbol">:subscription_type</span>, <span class="symbol">:subscriber_type</span>, <span class="symbol">:start_date</span>, <span class="symbol">:end_date</span>, <span class="symbol">:subscriber</span>, <span class="symbol">:subscription_type_id</span>, <span class="symbol">:quantity_purchased</span>, <span class="symbol">:activation_code</span>, <span class="symbol">:subscriber_id</span></br>

											before_destroy <span class="symbol">:check_removable?</span><br/>
											<br/>
											<span class="def-method"><span>def</span> check_removable?</span><br/>
										.tab
											:erb
												res = <span class="symbol">false</span><br/>
												
												if self.subscriber_type == 'User'
											.tab
												:erb												
													res = <span class="symbol">true</span>
											:erb
												else
											.tab
												:erb
													if is_empty?
												.tab
													:erb
														res = <span class="symbol">true</span>
												:erb
													else
												.tab
													:erb
														errors.add_to_base "Cannot delete subscription. This subscription is referenced by active users. Please remove the users subscriptions by removing each user from the group this subscription is applied to first"
												:erb
													end
											:erb
												end<br/>

												raise SubscriptionNotRemovableException unless res
												return res
										:erb
											end<br/>
											<br/>
  
											<span class="def-method"><span>def</span> self.generate_activation_code</span>
										.tab
											:erb
												chars = ('a'..'z').to_a + ('A'..'Z').to_a + (0..9).to_a<br/>
												(0...10).collect { chars[<span class="class">Kernel</span>.rand(chars.length)] }.join
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> subscription_type_with_end_date=(<i>new_subscription_type</i>)</span>
										.tab
											:erb
												if self.start_date.nil?
											.tab
												:erb
													self.start_date = <span class="class">Date</span>.today
											:erb
												end<br/>

												if self.end_date.blank?
											.teb
												:erb
													self.end_date = self.start_date + new_subscription_type.duration.months
											:erb
												end<br/>
												self.subscription_type_without_end_date = new_subscription_type
										:erb
											end<br/>
											alias_method_chain <span class="symbol">:subscription_type=</span>, <span class="symbol">:end_date</span><br/>
											<br/>

											<span class="def-method"><span>def</span> subscription_type_id=(<i>new_subscription_type_id</i>)</span>
										.tab
											:erb
												write_attribute(<span class="symbol">:subscription_type_id</span>, new_subscription_type_id)
										:erb
											end<br/>
											<br/>
 
											<span class="def-method"><span>def</span> subscription_type_id_with_end_date=(<i>new_subscription_type_id</i>)</span>
										.tab
											:erb
												self.start_date = <span class="class">Date</span>.today if self.start_date.nil?</br>

												end<br/>
												<br/>

												if self.end_date.blank?
											.tab
												:erb
													self.end_date = self.start_date + <span class="class">SubscriptionType</span>.find(new_subscription_type_id).duration.months
											:erb
												end<br/>
												self.subscription_type_id_without_end_date = new_subscription_type_id
										:erb
											end<br/>
											alias_method_chain :subscription_type_id=, :end_date<br/>
											<br/>
  
											<span class="def-method"><span>def</span> start_date=(<i>new_start_date</i>)</span>
										.tab
											:erb
												write_attribute(<span class="symbol">:start_date</span>, new_start_date)
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> start_date_with_end_date=(<i>new_start_date</i>)</span>
										.tab
											:erb
												unless self.subscription_type.blank?
											.tab
												:erb
													if self.end_date.blank?
												.tab
													:erb
														self.end_date = new_start_date + self.subscription_type.duration.months
												:erb
													end
											:erb
												end<br/>
												self.start_date_without_end_date = new_start_date
										:erb
											end<br/>
											alias_method_chain <span class="symbol">:start_date=</span>, :end_date<br/>
											<br/>
											<span class="def-method"><span>def</span> end_date=(<i>new_end_date</i>)</span>
										.tab
											:erb
												if self.start_date.nil? 
											.tab
												:erb
													self.start_date = <span class="class">Date</span>.today
											:erb
												end<br/>
												<br/>
												new_value = new_end_date.instance_of?(Date) ? new_end_date : <span class="class">Date</span>.parse(new_end_date.to_s)<br/>
												if new_value.to_date < self.start_date.to_date<br/>
											.tab
												:erb
													write_attribute(:end_date, start_date.to_date)
											:erb
												else
											.tab
												:erb
													write_attribute(<span class="symbol">:end_date</span>, new_end_date.to_date)
											:erb
												end
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> subscriber_with_activation_code=(<i>new_subscriber</i>)</span>
										.tab
											:erb
												if new_subscriber.class.name == "User"
											.tab
												:erb
													self.quantity_purchased = 1
											:erb
												elsif new_subscriber.class.name == "Group"
											.tab
												:erb
													self.activation_code = <span class="class">Subscription</span>.generate_activation_code
											:erb
												end<br/>
												self.subscriber_without_activation_code = new_subscriber
										:erb
											end<br/>
											alias_method_chain <span class="symbol">:subscriber=</span>, <span class="symbol">:activation_code</span><br/>
											<br/>

											<span class="def-method"><span>def</span> self.find_group_subscription_for_activation_code(<i>code</i>)</span>
										.tab
											:erb
												subs = <span class="class">Subscription</span>.find_all_by_activation_code(code)<br/>
												subs.select{|s| s.subscriber_type = "Group"}<br/>
												subs.first
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> self.find_group_for_subscription(<i>subscription</i>)</span>
										.tab
											:erb
												if subscription.blank? or subscription.activation_code.blank?
											.tab
												:erb
													return nil
											:erb
												end<br/>
												return <span class="class">Subscription</span>.find_group_for_activation_code(subscription.activation_code)
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> self.find_group_name_for_subscription(<i>subscription</i>)</span>
										.tab
											:erb
												group = find_group_for_subscription(subscription)<br/>
												return (group.blank? ? "" : group.client_group_name)
										:erb
											end<br/>
											<br/>


											<span class="def-method"><span>def</span> self.find_all_by_subscriber(<i>subscriber</i>)</span>
										.tab
											:erb
												return subscriber.subscriptions
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> self.find_current_by_subscriber(<i>subscriber</i>)</span>
										.tab
											:erb
												subscription = <span class="class">Subscription</span>.find_all_by_subscriber(subscriber).select{|s| s.enabled? && s.active?}.first
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> self.find_group_for_activation_code(<i>code</i>)</span>
										.tab
											:erb
												<span class="class">Subscription</span>.find_group_subscription_for_activation_code(code).subscriber
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> can_add_user?</span>
										.tab
											:erb
												result = self.enabled?<br/>
												result &&= self.active?<br/>
												result &&= self.has_available_places?</br>
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> has_available_places?</span>
										.tab
											:erb
												@activation_errors ||= []<br/>
												total_used = <span class="class">Subscription</span>.find_all_by_activation_code(self.activation_code).select{|s| s.enabled}.length - 1<br/>
												result = total_used < self.quantity_purchased<br/>
												<br/>
												unless result
											.tab
												:erb
													@activation_errors << "There are no available places - Subscription is full"
											:erb
												end<br/>
												return result
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> is_empty?</span>
										.tab
											:erb
												total_used = <span class="class">Subscription</span>.find_all_by_activation_code(self.activation_code).select{|s| s.enabled}.length - 1<br/>
												return total_used == 0 ? <span class="symbol">true</span> : <span class="symbol">false</span>
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> active?</span>
										.tab
											:erb
												result = <span class="symbol">true</span><br/>
												@activation_errors ||= []<br/>
												if self.start_date > <span class="class">Date</span>.today</br>
													@activation_errors << "Subscription is not enabled until #{self.start_date}"
											.tab
												:erb
													result = <span class="symbol">false</span>
											:erb
												elsif self.end_date < <span class="class">Date</span>.today
											.tab
												:erb
													@activation_errors << "Subscription expired on #{self.end_date}"<br/>
													result = <span class="symbol">false</span>
											:erb
												end<br/>
												return result
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> enabled?</span>
										.tab
											:erb
												@activation_errors ||= []<br/>
												unless enabled
											.tab
												:erb
													@activation_errors << "Subscription is disabled"
											:erb
												end<br/>
												return enabled
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> is_active_and_enabled?</span>
										.tab
											:erb
												return (self.active? and self.enabled?)
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> viewable_summaries_for_themes(<i>limit</i>, <i>themes</i>, <i>opts={}</i>)</span>
										.tab
											:erb
												return self.subscription_type.viewable_summaries_for_themes(limit, themes, opts)
										:erb
											end<br/>
											<br/>

											<span class="def-method"><span>def</span> viewable_summaries_filtered(<i>limit</i>, <i>opts={}</i>)</span>
										.tab
											:erb
												return self.subscription_type.viewable_summaries_filtered(limit, opts)
										:erb
											end
									:erb
										end








				.row
					.span12
						%h1 But you might ask 'what about the CSS'?
						%h2 CSS3 + media queries
						%p Designing for three platforms, each with seemingly infinite combinations of size, speed and orientation, is tricky business. But in order to reach the widest possible audience, it was critical that our design worked in a huge number of user scenarios.
						%h2 Animations
						%p CSS3 transitions are smoother than traditional means of animating elements, so we used them in several key areas within the site to improve and enhance user experience.
					.span10.offset1
						.editor
							.top_bar
								_button.sass
							.content
								.tab
									:erb
										<span class="def">=fancy_button(<span class="dollar_value">$radius</span>: 9px, <span class="dollar_value">$color_start</span>: rgb(243, 243, 243), <span class="dollar_value">$color_stop</span>: rgb(233, 233, 233), <span class="dollar_value">$text_on_button</span>: <span class="attribute">inset</span>, $size: <span class="attribute">normal</span>, <span class="dollar_value">$disabled</span>: false)</span>
									.tab
										:erb
											<span class="attribute">border</span>: <span class="attribute">none</span><br/>
											+border-radius(<span class="dollar_value">$radius</span>)<br/>
											<span class="attribute">font-weight</span>: <span class="attribute">bold</span><br/>
											<span class="attribute">padding</span>: 7px 18px 6px 18px<br/>
											<span class="attribute">background-color</span>: <span class="dollar_value">$color_stop</span><br/>
											+linear-gradient(color-stops(<span class="dollar_value">$color_start</span>, <span class="dollar_value">$color_stop</span>))<br/>
											<span class="attribute">border-top</span>: 1px solid <span class="dollar_value">$color_start</span> - rgb(41, 41, 41)<br/>
											<span class="attribute">border-left</span>: 1px solid <span class="dollar_value">$color_start</span> - rgb(51, 51, 51)<br/>
											<span class="attribute">border-right</span>: 1px solid <span class="dollar_value">$color_start</span> - rgb(51, 51, 51)<br/>
											<span class="attribute">border-bottom</span>: 1px solid <span class="dollar_value">$color_stop</span> - rgb(50, 50, 50)<br/>
											+box-shadow([0 1px 0 0 $color_start + rgb(15, 15, 15) inset], [0 2px 2px 0px #d8d8d8])<br/>
											<span class="attribute">font</span>:<br/>
										.tab
											:erb
												<span class="attribute">size</span>: 1.8em<br/>
										:erb
											<span class="attribute">cursor</span>: pointer<br/>
											@if <span class="dollar_value">$size</span> == big<br/>
										.tab
											:erb
												<span class="attribute">font-size</span>: 18px<br/>
										:erb
											@else<br/>
										.tab
											:erb
												@if <span class="dollar_value">$size</span> == huge<br/>
											.tab
												:erb
													<span class="attribute">padding<span>: 15px 60px<br/>
													<span class="attribute">font-size</span>: 20px<br/>
											:erb
												@else<br/>
											.tab
												:erb
													@if <span class="dollar_value">$size</span> == bigger<br/>
												.tab
													:erb
														<span class="attribute">font-size</span>: 20px<br/>
														<span class="attribute">padding</span>: 10px 30px<br/>
												:erb
													@else
													.tab
													:erb
														<span class="attribute">font-size</span>: 13px<br/>
														<span class="attribute">font-weight</span>: normal<br/>
										:erb
											@if $text_on_button == outset<br/>
										.tab
											:erb
												<span class="attribute">color</span>: white<br/>
												+text-shadow( rgba(0,0,0, 0.6), 0px, 1px, 0px)<br/>
										:erb
											@else<br/>
										.tab
											:erb
												<span class="attribute">color</span>: #2c2527<br/>
												+text-shadow( rgba(255,255,255, 0.6), 0px, 1px, 0px)<br/>
										:erb
											<span class="attribute">text-decoration</span>: none<br/>
											&:hover<br/>
										.tab
											:erb
												+linear-gradient(color-stops(<span class="dollar_value">$color_start</span>, <span class="dollar_value">$color_start</span>))<br/>
												<span class="attribute">background</span>:<br/>
											.tab
												:erb
													<span class="attribute">color</span>: <span class="dollar_value">$color_start</span><br/>
										:erb
											@if <span class="dollar_value">$disabled</span> == <span class="symbol">true</span>
										.tab
											:erb
												<span class="attribute">border</span>:<br/>
											.tab
												:erb
													<span class="attribute">top</span>: 1px solid <span class="dollar_value">$color_start</span><br/>
													<span class="attribute">left</span>: 1px solid <span class="dollar_value">$color_start</span><br/>
													<span class="attribute">right</span>: 1px solid $color_start<br/>
													<span class="attribute">bottom</span>: 1px solid $color_stop<br/>
											:erb
												-moz-box-shadow: 0 1px 0 0 $color_start + rgb(5, 5, 5) inset<br/>
												-webkit-box-shadow: 0 1px 0 0 $color_start + rgb(5, 5, 5) inset<br/>
												box-shadow: 0 1px 0 0 $color_start + rgb(5, 5, 5) inset<br/>
												-khtml-box-shadow: 0 1px 0 0 $color_start + rgb(5, 5, 5) inset<br/>
												+text-shadow(#D2D4D5, 0px, 1px, 0px)<br/>
												<span class="attribute">color</span>: #fff<br/>
												<span class="attribute">cursor</span>: not-allowed<br/>
												&:hover<br/>
											.tab
												:erb
													+linear-gradient(color-stops($color_start, $color_stop))<br/>

		%section#chapter5.dark-gray
			.container
				.row
					.span12.adjust
						.four-things
							=t(:'chapter5.four-things')
				.row
					.span12.pagination-centered
						%img{ :src => '/images/face-x2.gif', :width => '116', :height => '116', :alt => 'Thats me!'}
						%p
							That's me!
				.row
					.span12.adjust
						%h1=t(:'chapter5.title')
						%h2 So far I've helped organisations radically improve their web & mobile applications and create exciting new digital products. I combine a unique lean approach with knowledge of human behaviour and the principles of user-centred design.
				.row
					.span12
						%p So far I've worked on projects for:
				.row-fluid
					.span4
						.logo
							%img{ :src => '/images/logos/logo-bbc-academy.png', :alt => "BBC Academy", :witdh => '125', :height => '85' }			
					.span4
						.logo
							%img{ :src => '/images/logos/logo-jaguar-landrover.png', :alt => "Jaguar LAND ROVER" }
					.span4
						.logo
							%img{ :src => '/images/logos/logo-bp-castrol.png', :alt => "BP Castrol" }
				.row-fluid
					.span4
						.logo
							%img{ :src => '/images/logos/logo-gsk.png', :alt => " Glaxo Smith Kline" }
					.span4
						.logo
							%img{ :src => '/images/logos/logo-tetrapak.png', :alt => "Tetra Pak" }
					.span4
						.logo
							%img{ :src => '/images/logos/logo-syngenta.png', :alt => "syngenta" }
				.row-fluid						
					.span4
						.logo
							%img{ :src => '/images/logos/logo-payango.png', :alt => "payango" }
					.span4
						.logo
							%img{ :src => '/images/logos/logo-jobmensa.png', :alt => "Jobmensa" }
					.span4
						.logo
							%img{ :src => '/images/logos/logo-vattenfall.png', :alt => "Vattenfall" }
				.row
					.span12
						%p Agencies & House software development that I worked for:

				.row-fluid
					.span3
						.logo
							%img{ :src => '/images/logos/logo-line.png', :alt => "LINE Communications" }
					.span3
						.logo
							%img{ :src => '/images/logos/logo-railslove.png', :alt => "Railslove" }
					.span3
						.logo
							%img{ :src => '/images/logos/logo-object-reload.png', :alt => "Object Reload" }
					.span3
						.logo
							%img{ :src => '/images/logos/logo-akra.png' }